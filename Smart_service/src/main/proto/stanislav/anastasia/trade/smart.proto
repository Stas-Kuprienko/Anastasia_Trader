syntax = "proto3";

package stanislav.anastasia.trade;


service SmartAutoTrade {

  rpc subscribe(SubscribeTradeRequest) returns (stream SubscribeTradeResponse);
  rpc unsubscribe(UnsubscribeRequest) returns (UnsubscribeResponse);

}

message SubscribeTradeRequest {

  Account account = 1;
  string security = 2;
  double price = 3;
  int32 quantity = 4;
  Strategy strategy = 5;

}

message UnsubscribeRequest {

  Account account = 1;
  string security = 2;

}

message SubscribeTradeResponse {

  OrderNotification notification = 1;

}

message UnsubscribeResponse {

  bool isUnsubscribe = 1;

}

message Account {

  int32 userId = 1;
  string clientId = 2;

}

message Strategy {

  oneof payload {

    SimpleMovingAverageCrossing simpleMovingAverageCrossing = 1;
    SupportResistanceLevels supportResistanceLevels = 2;


  }

}

enum TimeFrame {

  M5 = 0;
  M15 = 1;
  M30 = 2;
  H1 = 3;
  H4 = 4;
  D1 = 5;

}

enum Direction {

  BUY = 0;
  SELL = 1;

}

message OrderNotification {

  repeated Account account = 1;
  Strategy strategy = 2;
  string security = 3;
  double price = 4;
  int32 quantity = 5;
  Direction direction = 6;
  string dateTime = 7;

}

message SimpleMovingAverageCrossing {

  TimeFrame timeFrame = 1;
  int32 period = 2;

}

message SupportResistanceLevels {

  TimeFrame timeFrame = 1;
  repeated double extremum = 2;

}